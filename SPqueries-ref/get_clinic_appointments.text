CREATE OR REPLACE FUNCTION public.get_clinic_appointments(
    p_clinic_id bigint,
    p_page integer,
    p_limit integer,
    p_search text DEFAULT NULL::text
) 
RETURNS json 
LANGUAGE plpgsql 
AS $function$
DECLARE
    result JSON;
    total_records INT;
    total_pages INT;
BEGIN
    -- Count total records for pagination
    SELECT COUNT(*) INTO total_records
    FROM "Appointments" a
    JOIN "Doctors" d ON a."doctorId" = d."doctorId"
    JOIN "Users" u ON a."patientId" = u."userId"
    WHERE a."clinicId" = p_clinic_id
    AND (
        p_search IS NULL 
        OR d."firstName" ILIKE '%' || p_search || '%' 
        OR d."lastName" ILIKE '%' || p_search || '%'
        OR d."speciality" ILIKE '%' || p_search || '%'
        OR TO_CHAR(a."appointmentDate", 'DD-MM-YYYY') ILIKE '%' || p_search || '%'
        OR TO_CHAR(a."appointmentTime", 'HH24:MI') ILIKE '%' || p_search || '%'
        OR u."firstName" ILIKE '%' || p_search || '%'
        OR u."middleName" ILIKE '%' || p_search || '%'
        OR u."lastName" ILIKE '%' || p_search || '%'
        OR u."email" ILIKE '%' || p_search || '%'
        OR u."contactNo" ILIKE '%' || p_search || '%'
    );

    total_pages := CEIL(total_records::NUMERIC / p_limit);

    -- Fetch paginated appointment details
    SELECT json_agg(appointments) INTO result
    FROM (
        SELECT 
            a."appointmentId",
            TO_CHAR(a."appointmentDate", 'DD-MM-YYYY') AS "appointmentDate",
            a."appointmentTime",
            a."appointmentStatus",
            a."reasonForVisit",
            d."doctorId",
            d."firstName" AS "doctorFirstName",
            d."middleName" AS "doctorMiddleName",
            d."lastName" AS "doctorLastName",
            d."profilePicture" AS "doctorProfilePicture",
            d."experience",
            d."qualifications",
            d."gender" AS "doctorGender",
            d."speciality",
            u."userId",
            u."firstName" AS "patientFirstName",
            u."middleName" AS "patientMiddleName",
            u."lastName" AS "patientLastName",
            u."email" AS "patientEmail",
            u."contactNo" AS "patientContactNo",
            u."profilePicture" AS "patientProfilePicture"
        FROM "Appointments" a
        JOIN "Doctors" d ON a."doctorId" = d."doctorId"
        JOIN "Users" u ON a."patientId" = u."userId"
        WHERE a."clinicId" = p_clinic_id
        AND (
            p_search IS NULL 
            OR d."firstName" ILIKE '%' || p_search || '%' 
			OR d."middleName" ILIKE '%' || p_search || '%'
            OR d."lastName" ILIKE '%' || p_search || '%'
            OR d."speciality" ILIKE '%' || p_search || '%'
            OR TO_CHAR(a."appointmentDate", 'DD-MM-YYYY') ILIKE '%' || p_search || '%'
            OR TO_CHAR(a."appointmentTime", 'HH24:MI') ILIKE '%' || p_search || '%'
            OR u."firstName" ILIKE '%' || p_search || '%'
            OR u."middleName" ILIKE '%' || p_search || '%'
            OR u."lastName" ILIKE '%' || p_search || '%'
            OR u."email" ILIKE '%' || p_search || '%'
            OR u."contactNo" ILIKE '%' || p_search || '%'
        )
        ORDER BY a."appointmentDate" DESC, a."appointmentTime"::TIME DESC
        LIMIT p_limit OFFSET (p_page - 1) * p_limit
    ) AS appointments;

    -- Return paginated result with total pages and current page
    RETURN json_build_object(
        'appointments', COALESCE(result, '[]'::JSON),
        'totalPages', total_pages,
        'currentPage', p_page
    );
END;
$function$;