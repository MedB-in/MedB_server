CREATE OR REPLACE FUNCTION public.get_all_active_doctors(
    clinic_id integer, 
    page integer, 
    items_per_page integer, 
    search_query text DEFAULT NULL::text
) 
RETURNS json 
LANGUAGE plpgsql
AS $function$
DECLARE
    result JSON;
    total_records INT;
    total_pages INT;
BEGIN
    -- Count total active doctors associated with the clinic
    SELECT COUNT(DISTINCT d."doctorId") 
    INTO total_records 
    FROM "Doctors" d
    JOIN "DoctorClinic" dc 
        ON d."doctorId" = dc."doctorId" 
        AND dc."clinicId" = clinic_id
    WHERE d."isActive" = TRUE 
      AND dc."isActive" = TRUE
      AND (
          search_query IS NULL 
          OR LOWER(CONCAT_WS(' ', d."firstName", d."middleName", d."lastName", d."speciality")) 
          LIKE LOWER('%' || search_query || '%')
      );

    total_pages := CEIL(total_records::NUMERIC / items_per_page);

    -- Fetch unique active doctors with pagination
    SELECT json_build_object(
        'doctors', COALESCE(json_agg(row_to_json(t)), '[]'::JSON),
        'totalRecords', total_records,
        'totalPages', total_pages,
        'currentPage', page,
        'itemsPerPage', items_per_page
    )
    INTO result
    FROM (
        SELECT DISTINCT ON (d."doctorId")  -- Ensure each doctor appears only once
            d."doctorId",
            d."firstName",
            d."middleName",
            d."lastName",
            d."speciality",
            d."qualifications",
            d."experience",
            d."profilePicture"
        FROM "Doctors" d
        JOIN "DoctorClinic" dc 
            ON d."doctorId" = dc."doctorId" 
            AND dc."clinicId" = clinic_id
        WHERE d."isActive" = TRUE 
          AND dc."isActive" = TRUE
          AND (
              search_query IS NULL 
              OR LOWER(CONCAT_WS(' ', d."firstName", d."middleName", d."lastName", d."speciality")) 
              LIKE LOWER('%' || search_query || '%')
          )
        ORDER BY d."doctorId", d."firstName"  -- Ensures consistent selection
        LIMIT items_per_page OFFSET (page - 1) * items_per_page
    ) t;

    RETURN result;
END;
$function$;