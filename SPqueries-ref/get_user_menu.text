CREATE OR REPLACE FUNCTION public.get_user_menu(user_id bigint)
 RETURNS json
 LANGUAGE plpgsql
AS $function$
DECLARE 
    result JSON;
    resolved_product_id INT;
BEGIN
    -- Resolve the product_id based on the user_id from the UserRights table
    SELECT DISTINCT pm."productId" INTO resolved_product_id
    FROM "UserRights" ur
    JOIN "ProductMenu" pm ON pm."menuId" = ur."menuId"
    WHERE ur."userId" = user_id
    LIMIT 1;

    -- If no product is found for the user, raise an error
    IF resolved_product_id IS NULL THEN
        RAISE EXCEPTION 'No product found for the given user';
    END IF;

    -- Fetch the menu and rights information for the resolved product_id
    SELECT json_agg(modules_with_menus) INTO result
    FROM (
        SELECT 
            m."moduleId",
            m."moduleName",
            m."sortOrder",
            m."moduleIcon",
            (
                SELECT json_agg(menus_with_rights)
                FROM (
                    SELECT 
                        me."menuId",
                        me."menuName",
                        me."sortOrder",
                        me."menuIcon",
                        me."actionName",
                        me."controllerName",
                        COALESCE((
                            SELECT jsonb_build_object(
                                'viewAllowed', ur."viewAllowed",
                                'editAllowed', ur."editAllowed",
                                'createAllowed', ur."createAllowed",
                                'deleteAllowed', ur."deleteAllowed"
                            )
                            FROM "UserRights" ur
                            WHERE ur."userId" = user_id AND ur."menuId" = me."menuId"
                        ), '{}'::JSONB) AS rights
                    FROM "Menu" me
                    WHERE me."moduleId" = m."moduleId"
                    ORDER BY me."sortOrder"
                ) AS menus_with_rights
            ) AS menus
        FROM "Module" m
        WHERE m."moduleId" IN (
            SELECT pm."menuId" 
            FROM "ProductMenu" pm 
            WHERE pm."productId" = resolved_product_id
        )
        ORDER BY m."sortOrder"
    ) AS modules_with_menus;

    RETURN result;
END;
$function$
