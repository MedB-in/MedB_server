CREATE OR REPLACE FUNCTION update_doctor(
    p_doctor_id INTEGER,
    p_registration TEXT DEFAULT NULL,
    p_first_name TEXT DEFAULT NULL,
    p_middle_name TEXT DEFAULT NULL,
    p_last_name TEXT DEFAULT NULL,
    p_phone TEXT DEFAULT NULL,
    p_email TEXT DEFAULT NULL,
    p_profile_picture TEXT DEFAULT NULL,
    p_experience INTEGER DEFAULT NULL,
    p_qualifications TEXT DEFAULT NULL,
    p_gender TEXT DEFAULT NULL,
    p_speciality TEXT DEFAULT NULL,
    p_signature TEXT DEFAULT NULL,
    p_address TEXT DEFAULT NULL,
    p_location GEOMETRY DEFAULT NULL,
    p_city TEXT DEFAULT NULL,
    p_district TEXT DEFAULT NULL,
    p_state TEXT DEFAULT NULL,
    p_country TEXT DEFAULT NULL,
    p_postal_code TEXT DEFAULT NULL,
    p_is_active BOOLEAN DEFAULT NULL,
    p_modified_by BIGINT DEFAULT NULL
) RETURNS JSON AS $$
DECLARE
    v_doctor RECORD;
BEGIN
    -- Check if doctor exists
    SELECT * INTO v_doctor FROM "Doctors" WHERE "doctorId" = p_doctor_id;
    IF NOT FOUND THEN
        RETURN json_build_object('status', 'error', 'message', 'Doctor not found');
    END IF;
    
    -- Try to update the doctor details
    BEGIN
        UPDATE "Doctors" SET
            "registration" = COALESCE(p_registration, "registration"),
            "firstName" = COALESCE(p_first_name, "firstName"),
            "middleName" = COALESCE(p_middle_name, "middleName"),
            "lastName" = COALESCE(p_last_name, "lastName"),
            "phone" = COALESCE(p_phone, "phone"),
            "email" = COALESCE(p_email, "email"),
            "profilePicture" = COALESCE(p_profile_picture, "profilePicture"),
            "experience" = COALESCE(p_experience, "experience"),
            "qualifications" = COALESCE(p_qualifications, "qualifications"),
            "gender" = COALESCE(p_gender, "gender"),
            "speciality" = COALESCE(p_speciality, "speciality"),
            "signature" = COALESCE(p_signature, "signature"),
            "address" = COALESCE(p_address, "address"),
            "location" = COALESCE(p_location, "location"),
            "city" = COALESCE(p_city, "city"),
            "district" = COALESCE(p_district, "district"),
            "state" = COALESCE(p_state, "state"),
            "country" = COALESCE(p_country, "country"),
            "postalCode" = COALESCE(p_postal_code, "postalCode"),
            "isActive" = COALESCE(p_is_active, "isActive"),
            "modifiedOn" = NOW(),
            "modifiedBy" = p_modified_by
        WHERE "doctorId" = p_doctor_id;
        
        RETURN json_build_object('status', 'success', 'message', 'Doctor updated successfully');
    
    EXCEPTION WHEN unique_violation THEN
        RETURN json_build_object('status', 'error', 'message', 'Duplicate value for unique field');
    WHEN others THEN
        RETURN json_build_object('status', 'error', 'message', 'Unexpected error occurred');
    END;
END;
$$ LANGUAGE plpgsql;
